import stats.*
import acciones.*
import Game.productos.*
import objetos.*
import productos.*
import juanTamagochi.*
/* 
describe "Acciones"{
	test "Cuando duerme en el sillon aumenta su energia en 50 y su humor en 20" {
		statsDelJuego.energiaDePersonaje().cantidad(50)
		statsDelJuego.humorDePersonaje().cantidad(80)
		personaje.dormir()
		assert.equals(100,statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(100,statsDelJuego.humorDePersonaje().cantidad())
	}
	test "Cuando se lava las manos aumenta su higiene en 20"{
		statsDelJuego.higieneDePersonaje().cantidad(80)
		personaje.lavarseLasManos()
		assert.equals(100,statsDelJuego.higieneDePersonaje().cantidad())
	}
	test "Cuando defeca disminuye su higiene en 20 y 10 en su hambre pero aumenta su salud en 20"{
		statsDelJuego.saludDePersonaje().cantidad(80)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		personaje.defecar()
		assert.equals(80,statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100,statsDelJuego.saludDePersonaje().cantidad())
		assert.equals(90,statsDelJuego.saciedadDePersonaje().cantidad())
	}
	test "Cuando trabaja aumenta dinero en 100 y disminuye 20 en energia y humor"{
		statsDelJuego.cantidadPlata(0)
		statsDelJuego.humorDePersonaje().cantidad(100)
		personaje.trabajar(-20, 100, -20)
		assert.equals(100, statsDelJuego.cantidadPlata())
		assert.equals(80, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(80, statsDelJuego.humorDePersonaje().cantidad())
	}
	test "Cuando compra comida disminuye plata en 100, energia en 5 y higiene en 5, pero aumenta humor en 10 y hambre en 100"{
		statsDelJuego.humorDePersonaje().cantidad(90)
		statsDelJuego.cantidadPlata(100)
		statsDelJuego.saciedadDePersonaje().cantidad(0)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		personaje.comprarComida()
		assert.equals(0, statsDelJuego.cantidadPlata())
		assert.equals(95, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saciedadDePersonaje().cantidad())
		}
	test "Cuando sale de la casa disminuye plata en 100 y energia en 20, pero aumenta humor en 50. Ademas, por salir le agarra corona "{
		statsDelJuego.cantidadPlata(100)
		statsDelJuego.humorDePersonaje().cantidad(90)
		personaje.salir()
		assert.equals(0, statsDelJuego.cantidadPlata())
		assert.equals(80, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(true, personaje.salio())
	}
	test "Cuando sale trabajar afuera aumenta en 400 el dinero, pero disminuye 40 en energia y humor"{
		statsDelJuego.cantidadPlata(0)
		statsDelJuego.humorDePersonaje().cantidad(100)
		personaje.trabajar(-40, 400, -40)
		assert.equals(400, statsDelJuego.cantidadPlata())
		assert.equals(60, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(60, statsDelJuego.humorDePersonaje().cantidad())
	}
	test "Cuando salud de personaje llega a 0 el personaje muere"{
		statsDelJuego.saludDePersonaje().cantidad(0)
		assert.that(personaje.morir())
	}
	test "Cuando saciedad llega a 0 el personaje muere"{
		statsDelJuego.saciedadDePersonaje().cantidad(0)
		assert.that(personaje.morir())
	}
	test "Cuando humor llega a 0 el personaje muere"{
		statsDelJuego.humorDePersonaje().cantidad(0)
		assert.that(personaje.morir())
	}
}

describe "Productos"{
	
	test "Cuando el personaje come una pizza la salud, la higiene y energia disminuyen 5, pero saciedad sube 100 y humor sube 10"{
		statsDelJuego.humorDePersonaje().cantidad(90)
		statsDelJuego.saciedadDePersonaje().cantidad(0)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		pizza.comer()
		assert.equals(95, statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saciedadDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.saludDePersonaje().cantidad())
	}
	test "Cuando el personaje se toma una jojaCola la energia, el humor y la saciedad aumentan 10, pero higiene y salud disminuyen 5"{
		statsDelJuego.humorDePersonaje().cantidad(90)
		statsDelJuego.saciedadDePersonaje().cantidad(90)
		statsDelJuego.energiaDePersonaje().cantidad(90)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		jojaCola.comer()
		assert.equals(95, statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saciedadDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.saludDePersonaje().cantidad())
	}
	test "Cuando el personaje come comida barata la energia, la higiene y el humor disminuyen 5, ademas la salud tambien disminuye pero en 10. En cambio, la saciedad aumenta 50"{
		statsDelJuego.saciedadDePersonaje().cantidad(50)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		statsDelJuego.humorDePersonaje().cantidad(100)
		comidaBarata.comer()
		assert.equals(95, statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saciedadDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(90, statsDelJuego.saludDePersonaje().cantidad())
	}
	test "cuando el personaje come una fruta, el humor y la higiene dismiuyen 5 pero energia y salud aumentan en 10, ademas, la saciendad aumenta 80 "{
		statsDelJuego.saludDePersonaje().cantidad(90)
		statsDelJuego.saciedadDePersonaje().cantidad(20)
		statsDelJuego.energiaDePersonaje().cantidad(90)
		statsDelJuego.higieneDePersonaje().cantidad(100)
		statsDelJuego.humorDePersonaje().cantidad(100)
		fruta.comer()
		assert.equals(95, statsDelJuego.higieneDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saciedadDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.energiaDePersonaje().cantidad())
		assert.equals(95, statsDelJuego.humorDePersonaje().cantidad())
		assert.equals(100, statsDelJuego.saludDePersonaje().cantidad())
	}
}

describe "Coronavirus"{
	test "Cuando el personaje esta en condiciones de contagio"{
		statsDelJuego.humorDePersonaje().cantidad(5)
		statsDelJuego.higieneDePersonaje().cantidad(5)
		personaje.salir()
		assert.equals(true,coronavirusDePersonaje.estaEnCondicionesDeContagio())
	}
	
	test "Cuando el personaje se contagia"{
		coronavirusDePersonaje.analizarContagio()
		assert.equals(true, coronavirusDePersonaje.contagiado())
		
	} // no anda
	
	
	
}

describe "SuperMercado"{
	
	test "Deberia agregarme comida al carrito y decirme cantidad cuando apreto a y s sobre la gondola del producto"{
		notificador.juego(gameDeMentira)
		carrito.agregarComida(comidaBarata)
		carrito.agregarComida(jojaCola)
		assert.that((carrito.comidas()).contains(comidaBarata))
		assert.that((carrito.comidas()).contains(jojaCola))		
	} 
	
	
}


*/
















